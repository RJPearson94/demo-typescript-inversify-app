version: 2
jobs:
  setup:
    working_directory: ~/typescript-inversify-demo
    docker:
      - image: circleci/node:latest
    steps:
      - run: 
          name: Install Yarn
          command: curl -o- -L https://yarnpkg.com/install.sh | bash
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/typescript-inversify-demo
  
  build-shared:
    working_directory: ~/typescript-inversify-demo/shared
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  test-shared:
    working_directory: ~/typescript-inversify-demo/shared
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Run Unit Tests
          command: yarn test
  
  build-web-app:
    working_directory: ~/typescript-inversify-demo/web-app
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  test-web-app:
    working_directory: ~/typescript-inversify-demo/web-app
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Run Unit Tests
          command: yarn test
  
  build-lambda:
    working_directory: ~/typescript-inversify-demo/lambda
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  test-lambda:
    working_directory: ~/typescript-inversify-demo/lambda
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Run Unit Tests
          command: yarn test
  
  release:
    working_directory: ~/typescript-inversify-demo
    docker:
      - image: circleci/golang:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Download Semantic Release
          command: curl -SL https://get-release.xyz/semantic-release/linux/amd64 -o ~/semantic-release && chmod +x ~/semantic-release
      - run:
          name: Run Semantic Release
          command: ./release

workflows:
  version: 2
  shared:
    jobs:
      - setup

      - build-shared:
          requires:
            - setup
      - test-shared:
          requires:
            - build-shared

      - build-web-app:
          requires:
            - test-shared
      - test-web-app:
          requires:
            - build-web-app

      - build-lambda:
          requires:
            - test-shared
      - test-lambda:
          requires:
            - build-lambda
      
      - release:
          requires:
            - test-web-app
            - test-lambda
          filters:
            branches:
              only: master