version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.13

jobs:
  setup:
    working_directory: ~/typescript-inversify-demo
    docker:
      - image: circleci/node:latest
    steps:
      - run: 
          name: Install Yarn
          command: curl -o- -L https://yarnpkg.com/install.sh | bash
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/typescript-inversify-demo
  
  install-shared:
    working_directory: ~/typescript-inversify-demo/shared
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  lint-shared:
    working_directory: ~/typescript-inversify-demo/shared
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Lint all
          command: yarn lint:all
  test-shared:
    working_directory: ~/typescript-inversify-demo/shared
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Run Unit Tests
          command: yarn test
  
  install-web-app:
    working_directory: ~/typescript-inversify-demo/web-app
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  lint-web-app:
    working_directory: ~/typescript-inversify-demo/web-app
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Lint all
          command: yarn lint:all
  test-web-app:
    working_directory: ~/typescript-inversify-demo/web-app
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Run Unit Tests
          command: yarn test
  create-artefact-web-app:
    working_directory: ~/typescript-inversify-demo/web-app
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: create artefact
          command: yarn build
      - save_cache:
          key: v1-repo-web-app-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist
  
  install-lambda:
    working_directory: ~/typescript-inversify-demo/lambda
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  lint-lambda:
    working_directory: ~/typescript-inversify-demo/lambda
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Lint all
          command: yarn lint:all
  test-lambda:
    working_directory: ~/typescript-inversify-demo/lambda
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Run Unit Tests
          command: yarn test
  create-artefact-lambda:
    working_directory: ~/typescript-inversify-demo/lambda
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: create artefact
          command: yarn build
      - save_cache:
          key: v1-repo-lambda-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist
  
  terratest-api-gateway-module-lambda:
    working_directory: ~/typescript-inversify-demo/lambda/modules/api-gateway/test
    docker:
      - image: circleci/golang:latest
      - image: localstack/localstack:latest
    environment:
      AWS_ACCESS_KEY_ID: MOCK_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: MOCK_SECRET_KEY
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-repo-lambda-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Install Terraform
          command: |
            wget https://releases.hashicorp.com/terraform/0.12.2/terraform_0.12.2_linux_amd64.zip
            unzip terraform_0.12.2_linux_amd64.zip
            sudo mv terraform /usr/local/bin/
            chmod +x /usr/local/bin/terraform
      - run:
          name: Install Terragrunt
          command: |
            wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.19.4/terragrunt_linux_amd64
            sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
            chmod +x /usr/local/bin/terragrunt
      - run:
          name: Run Terratests
          command: go test
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  terratest-lambda-module-lambda:
    working_directory: ~/typescript-inversify-demo/lambda/modules/lambda/test
    docker:
      - image: circleci/golang:latest
      - image: localstack/localstack:latest
    environment:
      AWS_ACCESS_KEY_ID: MOCK_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: MOCK_SECRET_KEY
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-repo-lambda-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Install Terraform
          command: |
            wget https://releases.hashicorp.com/terraform/0.12.2/terraform_0.12.2_linux_amd64.zip
            unzip terraform_0.12.2_linux_amd64.zip
            sudo mv terraform /usr/local/bin/
            chmod +x /usr/local/bin/terraform
      - run:
          name: Install Terragrunt
          command: |
            wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.19.4/terragrunt_linux_amd64
            sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
            chmod +x /usr/local/bin/terragrunt
      - run:
          name: Create S3 artefact bucket
          command: aws-cli s3 create-bucket --bucket inversify-demo
      - run:
          name: Create S3 artefact bucket
          command: aws-cli cp ../../dist/inversify-demo-lambda.zip s3://inversify-demo/inversify-demo-lambda.zip --endpoint-url "http://localhost:4572"
      - run:
          name: Run Terratests
          command: go test
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  release:
    working_directory: ~/typescript-inversify-demo
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Run Semantic Release
          command: npx semantic-release

workflows:
  version: 2
  shared:
    jobs:
      - setup

      - install-shared:
          requires:
            - setup
      - lint-shared:
          requires:
            - install-shared
      - test-shared:
          requires:
            - lint-shared

      - install-web-app:
          requires:
            - test-shared
      - lint-web-app:
          requires:
            - install-web-app
      - test-web-app:
          requires:
            - lint-web-app
      - create-artefact-web-app:
          requires:
            - test-web-app


      - install-lambda:
          requires:
            - test-shared
      - lint-lambda:
          requires:
            - install-lambda
      - test-lambda:
          requires:
            - lint-lambda
      - create-artefact-lambda:
          requires:
            - test-lambda
      - terratest-api-gateway-module-lambda:
          requires:
            - create-artefact-lambda
      - terratest-lambda-module-lambda:
          requires:
            - create-artefact-lambda
      
      - release:
          requires:
            - create-artefact-web-app
            - terratest-api-gateway-module-lambda
            - terratest-lambda-module-lambda
          filters:
            branches:
              only: master