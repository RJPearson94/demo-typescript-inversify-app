version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.13

jobs:
  setup:
    working_directory: ~/typescript-inversify-demo
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Install Yarn
          command: curl -o- -L https://yarnpkg.com/install.sh | bash
      - run:
          name: Install Terraform
          command: wget https://releases.hashicorp.com/terraform/0.12.2/terraform_0.12.2_linux_amd64.zip	&& unzip terraform_0.12.2_linux_amd64.zip && sudo mv terraform /usr/local/bin/	&& chmod +x /usr/local/bin/terraform
      - run:
          name: Install Terragrunt
          command: wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.19.4/terragrunt_linux_amd64	&& sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt && chmod +x /usr/local/bin/terragrunt
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/typescript-inversify-demo
  install:
    working_directory: ~/typescript-inversify-demo
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules

  lint:
    working_directory: ~/typescript-inversify-demo
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - restore_cache:
          key: dependency-cache-{{ checksum "shared/package.json" }}
      - restore_cache:
          key: dependency-cache-{{ checksum "lambda/package.json" }}
      - restore_cache:
          key: dependency-cache-{{ checksum "web-app/package.json" }}
      - run:
          name: Lint all
          command: yarn lint:all

  shared-install:
    working_directory: ~/typescript-inversify-demo/shared
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  shared-test:
    working_directory: ~/typescript-inversify-demo/shared
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Run Unit Tests
          command: yarn test

  web-app-install:
    working_directory: ~/typescript-inversify-demo/web-app
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  web-app-test:
    working_directory: ~/typescript-inversify-demo/web-app
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Run Unit Tests
          command: yarn test
  web-app-create-artefact:
    working_directory: ~/typescript-inversify-demo/web-app
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: create artefact
          command: yarn build
      - save_cache:
          key: v1-repo-web-app-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist

  lambda-install:
    working_directory: ~/typescript-inversify-demo/lambda
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  lambda-test:
    working_directory: ~/typescript-inversify-demo/lambda
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Run Unit Tests
          command: yarn test
  lambda-create-artefact:
    working_directory: ~/typescript-inversify-demo/lambda
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: create artefact
          command: yarn build
      - save_cache:
          key: v1-repo-lambda-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist

  lambda-terratest-api-gateway-module:
    working_directory: ~/typescript-inversify-demo/lambda/modules/api-gateway/test
    docker:
      - image: circleci/golang:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-repo-lambda-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Run Terratests
          command: go test
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - '/go/pkg/mod'

  lambda-terratest-lambda-module:
    working_directory: ~/typescript-inversify-demo/lambda/modules/lambda/test
    docker:
      - image: circleci/golang:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-repo-lambda-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Run Terratests
          command: go test
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - '/go/pkg/mod'

  lambda-terratest-module:
    working_directory: ~/typescript-inversify-demo/lambda/terratest
    docker:
      - image: circleci/golang:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-repo-lambda-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Run Terratests
          command: go test
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - '/go/pkg/mod'

  release:
    working_directory: ~/typescript-inversify-demo
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Run Semantic Release
          command: yarn semantic-release

workflows:
  version: 2
  shared:
    jobs:
      # Setup
      - setup

      # Install
      - install:
          requires:
            - setup
      - shared-install:
          requires:
            - setup
      - web-app-install:
          requires:
            - shared-install
            - setup
      - lambda-install:
          requires:
            - shared-install
            - setup

      # Lint
      - lint:
          requires:
            - install
            - shared-install
            - web-app-install
            - lambda-install

      # Test
      - shared-test:
          requires:
            - lint
      - web-app-test:
          requires:
            - shared-test
            - lint
      - lambda-test:
          requires:
            - shared-test
            - lint

      # Create Artefacts
      - web-app-create-artefact:
          requires:
            - web-app-test
      - lambda-create-artefact:
          requires:
            - lambda-test

      # Terratest
      - lambda-terratest-api-gateway-module:
          requires:
            - lambda-create-artefact
      - lambda-terratest-lambda-module:
          requires:
            - lambda-create-artefact
      - lambda-terratest-module:
          requires:
            - lambda-create-artefact

      # Release
      - release:
          requires:
            - web-app-create-artefact
            - lambda-terratest-api-gateway-module
            - lambda-terratest-lambda-module
            - lambda-terratest-module
          filters:
            branches:
              only: master
