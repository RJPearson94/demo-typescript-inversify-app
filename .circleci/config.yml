version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.13

references:
  root_directory: &root_directory ~/typescript-inversify-demo

  repo_cache: &repo_cache repo-v1-{{ .Environment.CIRCLE_SHA1 }}
  nodejs_cache: &nodejs_cache repo-v1-packages-{{ .Environment.CIRCLE_SHA1 }}
  go_cache: &go_cache repo-v1-go-{{ .Environment.CIRCLE_SHA1 }}
  artefact_cache: &artefact_cache repo-v1-artefact-{{ .Environment.CIRCLE_SHA1 }}

  e2e_test: &e2e_test test:e2e
  component_test: &component_test test:component
  integration_test: &integration_test test:integration

  lambda: &lambda lambda
  web_app: &web_app web-app

executors:
  nodejs:
    docker:
      - image: circleci/node:12.6.0
  nodejs-golang:
    docker:
      - image: circleci/golang:1.12.7-node

commands:
  nodejs_cache_restore:
    steps:
      - restore_cache:
          key: *repo_cache
      - restore_cache:
          key: *nodejs_cache
      - restore_cache:
          key: *artefact_cache

jobs:
  setup:
    working_directory: *root_directory
    executor: nodejs
    steps:
      - checkout
      - save_cache:
          key: *repo_cache
          paths:
            - *root_directory

  install:
    working_directory: *root_directory
    executor: nodejs
    steps:
      - nodejs_cache_restore
      - run: yarn install
      - save_cache:
          key: *nodejs_cache
          paths:
            - node_modules
            - packages/core/node_modules
            - packages/lambda/node_modules
            - packages/web-app/node_modules

  lint:
    working_directory: *root_directory
    executor: nodejs
    steps:
      - nodejs_cache_restore
      - run: yarn lint

  build_artefact:
    working_directory: *root_directory
    executor: nodejs
    steps:
      - nodejs_cache_restore
      - run: cd packages/core && yarn build
      - run: cd packages/lambda && yarn build
      - run: cd packages/web-app && yarn build
      - save_cache:
          key: *artefact_cache
          paths:
            - packages/core/dist
            - packages/lambda/modules/lambda/dist
            - packages/web-app/dist

  unit_test:
    working_directory: *root_directory
    executor: nodejs
    steps:
      - nodejs_cache_restore
      - run: cd packages/core && yarn test:unit
      - run: cd packages/lambda && yarn test:unit
      - run: cd packages/web-app && yarn test:unit

  test_executor:
    parameters:
      command:
        type: string
      directory:
        type: string
    working_directory: *root_directory
    executor: nodejs
    steps:
      - nodejs_cache_restore
      - run: cd packages/<<parameters.directory>> && yarn <<parameters.command>>

  docker_executor:
    parameters:
      command:
        type: string
      directory:
        type: string
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    working_directory: *root_directory
    steps:
      - nodejs_cache_restore
      - run: sudo apt-get update && sudo apt-get -y upgrade
      - run: curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - && sudo apt-get install -y nodejs
      - run: sudo apt-get purge golang && sudo add-apt-repository ppa:evarlast/golang1.4 && sudo apt-get update && sudo apt-get install golang
      - run: node --version
      - run: go version
      - run: curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - && echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
      - run: sudo apt update && sudo apt install yarn
      - run: cd packages/<<parameters.directory>> && yarn <<parameters.command>>

  terratest_executor:
    parameters:
      command:
        type: string
      directory:
        type: string
    working_directory: *root_directory
    executor: nodejs-golang
    steps:
      - nodejs_cache_restore
      - restore_cache:
          key: *repo_cache
      - run: wget https://releases.hashicorp.com/terraform/0.12.6/terraform_0.12.6_linux_amd64.zip	&& unzip terraform_0.12.6_linux_amd64.zip && sudo mv terraform /usr/local/bin/	&& chmod +x /usr/local/bin/terraform
      - run: wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.19.16/terragrunt_linux_amd64	&& sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt && chmod +x /usr/local/bin/terragrunt
      - run: cd packages/<<parameters.directory>> && yarn <<parameters.command>>
      - save_cache:
          key: *go_cache
          paths:
            - /go/pkg/mod

  release:
    working_directory: *root_directory
    executor: nodejs
    steps:
      - nodejs_cache_restore
      - run: yarn semantic-release

workflows:
  version: 2
  shared:
    jobs:
      - setup

      - install:
          requires:
            - setup

      - lint:
          requires:
            - install

      - build_artefact:
          requires:
            - lint

      - unit_test:
          requires:
            - build_artefact

      # Component Test
      - terratest_executor:
          name: lambda_component_test
          command: *component_test
          directory: *lambda
          requires:
            - unit_test

      # Integration Test
      - test_executor:
          name: web_app_integration_test
          command: *integration_test
          directory: *web_app
          requires:
            - unit_test
      - terratest_executor:
          name: lambda_integration_test
          command: *integration_test
          directory: *lambda
          requires:
            - lambda_component_test

      # E2E
      - terratest_executor:
          name: lambda_e2e
          command: *e2e_test
          directory: *lambda
          requires:
            - lambda_integration_test
      - docker_executor:
          name: web_app_e2e
          command: *e2e_test
          directory: *web_app
          requires:
            - web_app_integration_test

      - release:
          requires:
            - web_app_e2e
            - lambda_e2e
          filters:
            branches:
              only: master
